# A hook script to verify the WordPress standards of the PHP files.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Define colors
red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`

# Allows us to read user input below, assigns stdin to keyboard
exec < /dev/tty

# Store stashed files for commit
files=$(git diff --cached --name-only | grep "\.php$")

if [[ "${#files}" -gt "0" ]]
then
	# Store the output
	output=$(phpcs --colors --standard=WordPress $files)

	# Check if there are any problems with the code (checking the length of the output)
	if [[ "${#output}" -gt "0" ]]
	then
		# If there are some problems display the errors/warnings
		echo "$output"

		# See if some automatic warnings/errors exist
		if echo $output | grep "PHPCBF CAN FIX THE \d" >/dev/null 2>&1
		then
			# Ask the user if he wants to correct the problems automatically
			read -p "Do you want to fix the marked warnings/errors automatically?[y/n]" autocorrect
			case $autocorrect in
				[Yy]* ) phpcbf --standard=WordPress --colors $(git diff --cached --name-only | grep ".php"); echo "Added the changed files back to commit stage!\n"; git add $(git diff --cached --name-only | grep ".php");;
				[Nn]* ) echo "${red}Please fix the issues yourself.\n${reset}";;
				* ) echo "${red}Please answer with yes[y] or no[n]!\n${reset}";;
			esac
			exit 1
		else
			# Ask the user if he wants to correct the problems automatically
			read -p "Do you want to commit anyway?[y/n]" commit
			case $commit in
				[Yy]* ) echo "Committing despite code not being compliant with WordPress standards..."; exit 0;;
				[Nn]* ) echo "${red}Please fix the issues and try to commit again.${reset}"; echo "${red}Don't forget to add the fixed files with git add command!\n${reset}"; exit 1;;
				* ) echo "You should answer with yes[y] or no[n]. Aborting commit."; exit 1;;
			esac
		fi
	else
		# Else display this message and exit properly
		echo "${green}Commited code complies to WordPress standard. Everyone is happy.\n${reset}"
		exit 0
	fi
else
	# No php files commited to check for WordPress standard so exit properly
	exit 0
fi

# Disable this command above: Allows us to read user input below, assigns stdin to keyboard
exec <&-